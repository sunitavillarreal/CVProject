#######################################################################################remove_duplicate_image.ipynb  This notebook is to detect and remove the duplicate images in the dataset. The way to use it is:# dir_path: the fold path of the dataset# remove_duplicate: the function to detect and remove the duplicated imagesdir_path = ¡°./duplicatedimages_foldpath¡±remove_duplicate(dir_path)#################################################################################################OneclassSVM.ipynbThis notebook is the whole code including feature extract, dimention reduction and one-class-svm. If you want to do other dataset, only need to change the directory of the dataset in the load dataset section, then run the whole cell.#################################################################################################CNN_binary_classifier.ipynbThis notebook implement CNN binary classifier with pre-trained ResNet50. The best model is saved as save_fine_tune_model.h5, this file is too large to upload, the google drive link: https://drive.google.com/file/d/1NHU0FfQYQNBSbMT8G9EmQhfLJ9LnJaEb/view?usp=sharing The way to use this model is down below:# Load test imagestest_datagen = ImageDataGenerator(    data_format='channels_last')test_generator = test_datagen.flow_from_directory(    "/content/images_notation_train_test/test",    target_size=(IMAGE_SIZE, IMAGE_SIZE),    batch_size=batch_size,    class_mode='binary'    )model = load_model('/content/save_fine_tune_model.h5')predict_generator(test_generator, model) 